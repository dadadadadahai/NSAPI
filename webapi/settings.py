"""
Django settings for webapi project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os.path
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-qyxr6hs*=7g7c%99-4#621cakc$qu@8yzyo)%biwn5@j=drtkf'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]
CORS_ORIGIN_ALLOW_ALL=True

ROOT_URLCONF = 'webapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            './imageUpLoad/template',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'webapi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

import mongoengine
mongoengine.connect('test',host='mongodb://127.0.0.1')
# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS=[
    BASE_DIR/'static',
]
# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
TSPAY={
    'AppId':10577,
    'Key':'15c73ca25ac44993b71d64c34ca5ea51',
}
SMS01={
    'appkey':'NUIEqb',
    'appsecret':'pxvb2l',
    'appcode':1000
}
FASTPAY={
    'mer_no':'1003217',
    'key' :'e50ffccf4b691739a200653f47459695',
}
LEPAY={
    'mch_id':'966966001',
    'pay_key':'f9616cdb340a4d3688ad4c6151bc83c1',
    'repay_key':'WZZLUQICSGTYTDO3GLFMZ6NUYAV6Q8JT',
}
SAFEPAY={
    'mer_no':'1083042',
    'pay_key':'debe9c99bf2070c0f1f44a53879254d6',
    'repay_key':'',
}
INAY={
    'mchtId':'2000621000651361',
    'pay_key':'1ede1a4b10554987a53dd828c6361ac1',
    'private':'-----BEGIN PRIVATE KEY-----\nMIICdQIBADANBgkqhkiG9w0BAQEFAASCAl8wggJbAgEAAoGBAMgxQWN6w04NJk0WJrMdx46cKdKc6aF59cQJ5dMffz50LB3EimcrP7r3s1sc24gsjFcj7W3LdpdT2o9a8WbP1UwDiAxpRfCKYMIFW3OIshMGchtewi3ySUlwW3+cii2w4WsUy6GHTedd3RCXwJuInYaQCqoQMpdKeasuWbf9Z6QTAgMBAAECgYBbaQpHh1XIvP5hMp0nKpDlkG8UaWvQvOS4yCA2H+q1NMy0JvtfkoL+N36hOvMPIfBPFeujN8WF4dcpoEgcPwhQZlD72fLidgihidc1a3WWMfjW6yWvHdaMSTx/JINQrNiR/wCGwd4lRWszxHZ0deh4UXXwDsbb3tThbVXSn1xsuQJBAPxnLjwpa622/RHJSdYZmWEBmaHO9kFshMnigz55PJptLsxeYdm8aKDNH66IHQkz3j4srDVxuJLk55j2W0xI5cUCQQDLC5lyu2KcDG9BOWwrsAd+7zQAX4swY/UUlQ8lHQ26P8mwAupms621KYbReItCHDWtt40C+njQ4Sn7UMO0zFf3AkAec8h1Q74VGGXSFooNBcumk43YouK9I/2laenRyMjSDOg/igeeQIgTFoyC/zMZoCNpNvSUAiN1vZ5fqyF6w7TNAkAXM8cgLjuRe3ZHLMmooF/q6Gi31jMwn2uFI5dsdUp5SwrAG0Uv4T5rYkhurWi0cEbOCBiMC5U8wU4r0snaYjN3AkANo1uQMH4FoTEDBuB/IEGbq2gQQNyUiaG6cC3F7+N8PFWwFXkIuGsIPojbhmSUTGb8i37okBOBvDFNhFzxBk4K\n-----END PRIVATE KEY-----',
    'public':'-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCToLb5QpQKyeT2c/94qo6Q8QA2CxESLxk9MGW6if5xRuZ4vSXXJ0gdOSrv6FbNS9m85z0+JP/C4QmSwSi3i/+wERA4Q2H3ZVxJHynqw/P3OwWFdg++8A5VjRoo6O3KceZekPQiK09Y6uwX22VZJD8BO6V55XE1GrNmATEO84IjYwIDAQAB\n-----END PUBLIC KEY-----',
}
ISTYPE = 2   #返回url   2返回二维码
CALLBACKHOST='http://webapi.happyslotss.com:8080/pay/'
REPAYCALLBACKHOST='http://webapi.happyslotss.com:8080/repay/'
ALLOWED_FILE_TYPES = ['jpg', 'jpeg', 'png', 'gif', 'pdf']
MAX_UPLOAD_SIZE = 10485760 # 10MB
MEDIA_ROOT = os.path.join(BASE_DIR,'static/userImage')
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {"max_connections": 20}
            # "PASSWORD": ""
        }
    }
}

PREFIX='n'
#日志模块
import logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False, # 是否禁用已经存在的日志器
    'formatters': {  # 输出日志的格式
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(lineno)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(module)s %(lineno)d %(message)s'
        },
    },
    'filters': {  # 对日志进行过滤
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': { # 日志的处理方式
        'console': {  # 终端输出日志
            'level': 'INFO',  # 大于INFO级别，才输出
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple' # 输出简单的样式
        },
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR , "logs/meiduo.log"),  # 日志文件的位置
            'maxBytes': 300 * 1024 * 1024,  # 文件最多存储 300M 的内存   日志文件满了，他会自动新建meiduo1 meiduo2
            'backupCount': 10, # 最多十个文件
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {  # 定义了一个名为django的日志器
            'handlers': ['console', 'file'], # 可以同时在终端跟文件中输出
            'propagate': True,
            'level;':'INFO' # 日至输出的最低级别
        },
    }
}
BIND_IP = '127.0.0.1'


# logger = logging.getLogger('loggers')
# logger.info('这是测试')